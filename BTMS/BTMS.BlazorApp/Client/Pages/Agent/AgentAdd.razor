@page "/agent/add"
@inject HttpClient http;
@inject ISnackbar snackbar

<MudCard class="form-card">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Create new Agent</MudText>
        </CardHeaderContent>

    </MudCardHeader>
    <MudCardContent>
        <EditForm Model="@agent" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <div class="col-2">
                <MudTextField Label="Agent name"
                              @bind-Value="agent.Name" For="@(() => agent.Name)" />
                <MudTextField Label="Email"
                              @bind-Value="agent.Email" />
            </div>
            <div class="col-2">

                <MudTextField Label="Phone Number"
                              @bind-Value="agent.PhoneNumber" For="@(() => agent.PhoneNumber)" />
                <MudTextField Label="Address"
                              @bind-Value="agent.Address" For="@(() => agent.Address)" />
            </div>

            <div class="col-2">
                <span></span>
                <div style="text-align:right">

                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton>
                </div>

            </div>

        </EditForm>
    </MudCardContent>
</MudCard>

@code {
    private Agent agent = new();
    private async void HandleValidSubmit(EditContext editContext)
    {
        await this.Save();

    }
    private async Task Save()
    {
        var response = await this.http.PostAsJsonAsync<Agent>("/api/Agents", this.agent);
        if (response.IsSuccessStatusCode)
        {
            this.snackbar.Clear();
            this.snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;
            this.snackbar.Add("Data saved.", Severity.Success);
            this.agent = new();
            this.StateHasChanged();
        }
        else
        {
            this.snackbar.Clear();
            this.snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;
            this.snackbar.Add("Failed to save.", Severity.Warning);
        }
    }
}
